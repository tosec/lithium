import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import { RouterOutputs, api } from "~/utils/api";
import Head from "next/head";

// dayjs
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { Loading, LoadingPage } from "~/components/Loading";
dayjs.extend(relativeTime);

const CreatePost = () => {
  const { user } = useUser();
  if (!user) return null;
  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.profileImageUrl}
        alt="pfp"
        className="h-16 w-16 rounded-full"
        width={56}
        height={56}
      />
      <input
        placeholder="Drop a message..."
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const SinglePost = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex justify-start gap-2 p-5">
      <Image
        src={author.profileImageUrl}
        alt="pfp"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col ">
        <div className="flex gap-1">
          <span className="font-bold">{author.firstName}</span>
          <span>{`- ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

// separating data flows
const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  if (!data) return <div>Uh oh..</div>;

  return (
    <div className="flex flex-col">
      {data?.map((fullPost) => (
        <SinglePost {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();

  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="m-10 w-full rounded-lg bg-zinc-800 drop-shadow-lg md:max-w-2xl">
          <div className="p-4">
            {!isSignedIn && (
              <div className="justify-">
                <SignInButton />
              </div>
            )}
            {!!isSignedIn && <CreatePost />}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
